"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5948],{43172:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var s=t(487462),n=(t(667294),t(603905)),o=t(689417);const p='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword">open </span><span class="token keyword">fun </span><a href="templated-fields-"><span class="token function">templatedFields</span></a><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">names<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter ">prefixMatching<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token operator">?</span><span class="token punctuation">, </span></span><span class="parameter "><span><span class="token annotation builtin">@</span><span data-unresolved-link="org.springframework.beans.factory.annotation/Autowired///PointingToDeclaration/"><span class="token annotation builtin">Autowired</span></span>&nbsp;</span>objectMapper<span class="token operator">: </span><span data-unresolved-link="com.fasterxml.jackson.databind/ObjectMapper///PointingToDeclaration/">ObjectMapper</span></span></span><span class="token punctuation">)</span><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><a href="../-j-s-o-n-field/index-">JSONField</a><span class="token operator">&gt;</span></div><p class="paragraph">All templatedFields If `names` is provided, only those matching the name. If `prefixMatching` is true, matching is done by prefix, otherwise by full name.</p><hr><div class="symbol monospace"><span class="token keyword">abstract </span><span class="token keyword">val </span><a href="templated-fields-">templatedFields</a><span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-map/index.html">MutableMap</a><span class="token operator">&lt;</span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="token punctuation">, </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html">String</a><span class="token operator">&gt;</span></div><p class="paragraph">The values for all templated fields. The schema is defined by the <a href="../-template/index-">Template</a> of this node</p></div></div>\n',l={},i="templatedFields",r={unversionedId:"api/core/gropius.model.template/-templated-node/templated-fields-",id:"api/core/gropius.model.template/-templated-node/templated-fields-",title:"templatedFields",description:"",source:"@site/docs/api/core/gropius.model.template/-templated-node/templated-fields-.mdx",sourceDirName:"api/core/gropius.model.template/-templated-node",slug:"/api/core/gropius.model.template/-templated-node/templated-fields-",permalink:"/gropius-backend-docs/api/core/gropius.model.template/-templated-node/templated-fields-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"templatedField",permalink:"/gropius-backend-docs/api/core/gropius.model.template/-templated-node/templated-field-"},next:{title:"TEMPLATED_FIELDS_FILTER_BEAN",permalink:"/gropius-backend-docs/api/core/gropius.model.template/-t-e-m-p-l-a-t-e-d_-f-i-e-l-d-s_-f-i-l-t-e-r_-b-e-a-n-"}},d={},c=[],m={toc:c},k="wrapper";function u(a){let{components:e,...t}=a;return(0,n.kt)(k,(0,s.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"templatedfields"},"templatedFields"),(0,n.kt)(o.Z,{dokkaHTML:p,mdxType:"DokkaComponent"}))}u.isMDXComponent=!0}}]);