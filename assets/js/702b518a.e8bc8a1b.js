"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[54771],{80158:(e,t,d)=>{d.r(t),d.d(t,{Badge:()=>c,Bullet:()=>p,Details:()=>f,SpecifiedBy:()=>s,assets:()=>u,contentTitle:()=>o,default:()=>k,frontMatter:()=>n,metadata:()=>r,toc:()=>b});var i=d(487462),a=d(667294),l=d(603905);const n={id:"audited-node-filter-input",title:"AuditedNodeFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},o=void 0,r={unversionedId:"graphql/api-public/inputs/audited-node-filter-input",id:"graphql/api-public/inputs/audited-node-filter-input",title:"AuditedNodeFilterInput",description:"Filter used to filter AuditedNode",source:"@site/docs/graphql/api-public/inputs/audited-node-filter-input.mdx",sourceDirName:"graphql/api-public/inputs",slug:"/graphql/api-public/inputs/audited-node-filter-input",permalink:"/gropius-backend-docs/graphql/api-public/inputs/audited-node-filter-input",draft:!1,tags:[],version:"current",frontMatter:{id:"audited-node-filter-input",title:"AuditedNodeFilterInput",hide_table_of_contents:!0,pagination_next:null,pagination_prev:null},sidebar:"graphqlSidebar"},u={},p=()=>(0,l.kt)(a.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,l.kt)(a.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),c=e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("span",{className:e.class},e.text)),b=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeFilterInput.<b>and</b></code><Bullet /><code>[AuditedNodeFilterInput!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodefilterinputbandbcodeauditednodefilterinput--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeFilterInput.<b>createdAt</b></code><Bullet /><code>DateTimeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodefilterinputbcreatedatbcodedatetimefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeFilterInput.<b>createdBy</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodefilterinputbcreatedbybcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeFilterInput.<b>id</b></code><Bullet /><code>IDFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodefilterinputbidbcodeidfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeFilterInput.<b>lastModifiedAt</b></code><Bullet /><code>DateTimeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodefilterinputblastmodifiedatbcodedatetimefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeFilterInput.<b>lastModifiedBy</b></code><Bullet /><code>UserFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodefilterinputblastmodifiedbybcodeuserfilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeFilterInput.<b>not</b></code><Bullet /><code>AuditedNodeFilterInput</code> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodefilterinputbnotbcodeauditednodefilterinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>AuditedNodeFilterInput.<b>or</b></code><Bullet /><code>[AuditedNodeFilterInput!]</code> <Badge class="badge badge--secondary" text="list"/> <Badge class="badge badge--secondary" text="input"/>',id:"code-style-fontweight-normal-auditednodefilterinputborbcodeauditednodefilterinput--",level:4},{value:"Member of",id:"member-of",level:3}],f=e=>{let{dataOpen:t,dataClose:d,children:n,startOpen:o=!1}=e;const[r,u]=(0,a.useState)(o);return(0,l.kt)("details",(0,i.Z)({},r?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,l.kt)("summary",{onClick:e=>{e.preventDefault(),u((e=>!e))},style:{listStyle:"none"}},r?t:d),r&&n)},m={Bullet:p,SpecifiedBy:s,Badge:c,toc:b,Details:f},g="wrapper";function k(e){let{components:t,...d}=e;return(0,l.kt)(g,(0,i.Z)({},m,d,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Filter used to filter AuditedNode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"input AuditedNodeFilterInput {\n  and: [AuditedNodeFilterInput!]\n  createdAt: DateTimeFilterInput\n  createdBy: UserFilterInput\n  id: IDFilterInput\n  lastModifiedAt: DateTimeFilterInput\n  lastModifiedBy: UserFilterInput\n  not: AuditedNodeFilterInput\n  or: [AuditedNodeFilterInput!]\n}\n")),(0,l.kt)("h3",{id:"fields"},"Fields"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-auditednodefilterinputbandbcodeauditednodefilterinput--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeFilterInput.",(0,l.kt)("b",null,"and"))),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/audited-node-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"[AuditedNodeFilterInput!]"))," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Connects all subformulas via and")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-auditednodefilterinputbcreatedatbcodedatetimefilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeFilterInput.",(0,l.kt)("b",null,"createdAt"))),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/date-time-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"DateTimeFilterInput"))," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filter by createdAt")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-auditednodefilterinputbcreatedbybcodeuserfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeFilterInput.",(0,l.kt)("b",null,"createdBy"))),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/user-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-auditednodefilterinputbidbcodeidfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeFilterInput.",(0,l.kt)("b",null,"id"))),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/idfilter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"IDFilterInput"))," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filter by id")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-auditednodefilterinputblastmodifiedatbcodedatetimefilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeFilterInput.",(0,l.kt)("b",null,"lastModifiedAt"))),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/date-time-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"DateTimeFilterInput"))," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filter by lastModifiedAt")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-auditednodefilterinputblastmodifiedbybcodeuserfilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeFilterInput.",(0,l.kt)("b",null,"lastModifiedBy"))),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/user-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"UserFilterInput"))," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Filters for nodes where the related node match this filter")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-auditednodefilterinputbnotbcodeauditednodefilterinput-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeFilterInput.",(0,l.kt)("b",null,"not"))),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/audited-node-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"AuditedNodeFilterInput"))," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Negates the subformula")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-auditednodefilterinputborbcodeauditednodefilterinput--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"AuditedNodeFilterInput.",(0,l.kt)("b",null,"or"))),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/graphql/api-public/inputs/audited-node-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"[AuditedNodeFilterInput!]"))," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Connects all subformulas via or")),(0,l.kt)("h3",{id:"member-of"},"Member of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/graphql/api-public/inputs/audited-node-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"AuditedNodeFilterInput")),"  ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"}),(0,l.kt)(p,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"p",href:"/graphql/api-public/inputs/audited-node-list-filter-input"},(0,l.kt)("inlineCode",{parentName:"a"},"AuditedNodeListFilterInput")),"  ",(0,l.kt)(c,{class:"badge badge--secondary",text:"input",mdxType:"Badge"})))}k.isMDXComponent=!0}}]);