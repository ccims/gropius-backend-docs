"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[97863],{77571:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>g,contentTitle:()=>m,default:()=>T,frontMatter:()=>h,metadata:()=>_,toc:()=>y});var n=o(487462),i=(o(667294),o(603905)),a=o(258219),r=(o(162316),o(580667)),s=o.n(r),l=o(524228),c=o.n(l),p=o(909487),d=(o(241429),o(905397)),u=(o(504667),o(809472)),k=o(685162);const h={id:"oauth-token-controller-token-34",title:"OauthTokenController_token_34",description:"OauthTokenController_token_34",sidebar_label:"OauthTokenController_token_34",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"OauthTokenController_token_34",parameters:[],responses:{201:{description:"",content:{"application/json":{schema:{type:"object"}}}}},tags:["credentials"],description:"OauthTokenController_token_34",method:"post",path:"/authenticate/oauth/{id}/token/{mode}",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Oauth Token Controller token 34",description:{type:"text/plain"},url:{path:["authenticate","oauth",":id","token",":mode"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"POST"}},sidebar_class_name:"post api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},m=void 0,_={unversionedId:"login-service/oauth-token-controller-token-34",id:"login-service/oauth-token-controller-token-34",title:"OauthTokenController_token_34",description:"OauthTokenController_token_34",source:"@site/rest-docs/login-service/oauth-token-controller-token-34.api.mdx",sourceDirName:"login-service",slug:"/login-service/oauth-token-controller-token-34",permalink:"/gropius-backend-docs/rest/login-service/oauth-token-controller-token-34",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"oauth-token-controller-token-34",title:"OauthTokenController_token_34",description:"OauthTokenController_token_34",sidebar_label:"OauthTokenController_token_34",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"OauthTokenController_token_34",parameters:[],responses:{201:{description:"",content:{"application/json":{schema:{type:"object"}}}}},tags:["credentials"],description:"OauthTokenController_token_34",method:"post",path:"/authenticate/oauth/{id}/token/{mode}",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Oauth Token Controller token 34",description:{type:"text/plain"},url:{path:["authenticate","oauth",":id","token",":mode"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"POST"}},sidebar_class_name:"post api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},sidebar:"restSidebar",previous:{title:"SyncImsUserController_linkIMSUser_33",permalink:"/gropius-backend-docs/rest/login-service/sync-ims-user-controller-link-ims-user-33"},next:{title:"Authorize endpoint for a strategy instance",permalink:"/gropius-backend-docs/rest/login-service/oauth-endpoints-controller-authorize-endpoint-35"}},g={},y=[{value:"Request",id:"request",level:2}],b={toc:y},v="wrapper";function T(e){let{components:t,...o}=e;return(0,i.kt)(v,(0,n.Z)({},b,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{className:"openapi__heading"},"OauthTokenController_token_34"),(0,i.kt)(s(),{method:"post",path:"/authenticate/oauth/{id}/token/{mode}",mdxType:"MethodEndpoint"}),(0,i.kt)(c(),{infoPath:"login-service/gropius-login-service",mdxType:"SecuritySchemes"}),(0,i.kt)("p",null,"OauthTokenController_token_34"),(0,i.kt)("h2",{id:"request"},"Request"),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)(a.Z,{mdxType:"ApiTabs"},(0,i.kt)(k.default,{label:"201",value:"201",mdxType:"TabItem"},(0,i.kt)("div",null),(0,i.kt)("div",null,(0,i.kt)(p.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(k.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(u.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(k.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",null,(0,i.kt)("strong",null,"object")))))),(0,i.kt)(k.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(d.Z,{responseExample:"{}",language:"json",mdxType:"ResponseSamples"})))))))))))}T.isMDXComponent=!0}}]);