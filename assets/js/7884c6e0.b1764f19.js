"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[56697],{856834:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>v,frontMatter:()=>p,metadata:()=>c,toc:()=>d});var a=i(487462),e=(i(667294),i(603905)),o=i(689417);const s='\n  \n  <div class="cover ">\n    \n  </div>\n  <div class="platform-hinted " data-platform-hinted="data-platform-hinted"><div class="content sourceset-dependent-content" data-active="" data-togglable=":core:dokkaHtmlPartial/main"><div class="symbol monospace"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="parameters "><span class="parameter ">derivesVisibleSelfDefined<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token punctuation">, </span></span><span class="parameter ">derivesInvisibleSelfDefined<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token punctuation">, </span></span><span class="parameter ">derivesVisibleDerived<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token punctuation">, </span></span><span class="parameter ">derivesInvisibleDerived<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token punctuation">, </span></span><span class="parameter ">isVisibleDerived<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token punctuation">, </span></span><span class="parameter ">isInvisibleDerived<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html">Boolean</a><span class="token punctuation">, </span></span><span class="parameter ">derivableInterfaceSpecifications<span class="token operator">: </span><a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html">List</a><span class="token operator">&lt;</span><span data-unresolved-link="com.expediagroup.graphql.generator.scalars/ID///PointingToDeclaration/">ID</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">)</span></div></div></div>\n',p={},r="InterfaceSpecificationDerivationConditionInput",c={unversionedId:"api/core/gropius.dto.input.template/-interface-specification-derivation-condition-input/-interface-specification-derivation-condition-input-",id:"api/core/gropius.dto.input.template/-interface-specification-derivation-condition-input/-interface-specification-derivation-condition-input-",title:"InterfaceSpecificationDerivationConditionInput",description:"",source:"@site/docs/api/core/gropius.dto.input.template/-interface-specification-derivation-condition-input/-interface-specification-derivation-condition-input-.mdx",sourceDirName:"api/core/gropius.dto.input.template/-interface-specification-derivation-condition-input",slug:"/api/core/gropius.dto.input.template/-interface-specification-derivation-condition-input/-interface-specification-derivation-condition-input-",permalink:"/gropius-backend-docs/api/core/gropius.dto.input.template/-interface-specification-derivation-condition-input/-interface-specification-derivation-condition-input-",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"InterfaceSpecificationDerivationConditionInput",permalink:"/gropius-backend-docs/api/core/gropius.dto.input.template/-interface-specification-derivation-condition-input/index-"},next:{title:"derivableInterfaceSpecifications",permalink:"/gropius-backend-docs/api/core/gropius.dto.input.template/-interface-specification-derivation-condition-input/derivable-interface-specifications-"}},l={},d=[],u={toc:d},f="wrapper";function v(n){let{components:t,...i}=n;return(0,e.kt)(f,(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,e.kt)("h1",{id:"interfacespecificationderivationconditioninput"},"InterfaceSpecificationDerivationConditionInput"),(0,e.kt)(o.Z,{dokkaHTML:s,mdxType:"DokkaComponent"}))}v.isMDXComponent=!0}}]);