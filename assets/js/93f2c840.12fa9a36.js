"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[62925],{204291:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>k,contentTitle:()=>y,default:()=>T,frontMatter:()=>h,metadata:()=>f,toc:()=>v});var a=s(487462),i=(s(667294),s(603905)),n=s(258219),r=(s(162316),s(580667)),o=s.n(r),l=s(524228),p=s.n(l),m=s(909487),d=(s(241429),s(905397)),u=s(504667),g=s(809472),c=s(685162);const h={id:"register-controller-get-data-suggestions-1",title:"Return username, display name and email suggestions for registering a user",description:"Return username, display name and email suggestions for registering a user",sidebar_label:"Return username, display name and email suggestions for registering a user",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"RegisterController_getDataSuggestions_1",description:"Return username, display name and email suggestions for registering a user",parameters:[],requestBody:{required:!0,content:{"application/json":{schema:{type:"object",properties:{register_token:{type:"string",description:'The register token issued during as result of the oauth registration flow.\nScope of the token must contain "login-register".\n\nMust be given.',example:"registration.token.jwt"}},required:["register_token"],title:"RegistrationTokenInput"}}}},responses:{200:{description:"If valid token and successfull (partial) suggested data for the new user",content:{"application/json":{schema:{type:"object",properties:{status:{description:"Status of the returned user data suggestion and information on usability",enum:["already-registered","username-taken","no-data","ok"],type:"string"},username:{type:"string",description:"A potential username to use for the registration.\nIf one is given, it was free the moment the suggestion is retrieved",example:"testUser"},displayName:{type:"string",description:"A potential name to display in the UI for the new user.",example:"Test User"},email:{type:"string",description:"A potential email of the new user.",example:"test-user@example.com"}},required:["status"],title:"UserDataSuggestionResponse"}}}},201:{description:"",content:{"application/json":{schema:{type:"object",properties:{status:{description:"Status of the returned user data suggestion and information on usability",enum:["already-registered","username-taken","no-data","ok"],type:"string"},username:{type:"string",description:"A potential username to use for the registration.\nIf one is given, it was free the moment the suggestion is retrieved",example:"testUser"},displayName:{type:"string",description:"A potential name to display in the UI for the new user.",example:"Test User"},email:{type:"string",description:"A potential email of the new user.",example:"test-user@example.com"}},required:["status"],title:"UserDataSuggestionResponse"}}}},400:{description:"If the input data is invalid"},401:{description:"If the given registration token is not/no longer valid or the registration time frame has expired"}},tags:["login-api"],method:"post",path:"/login/registration/data-suggestion",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},jsonRequestBodyExample:{register_token:"registration.token.jwt"},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Return username, display name and email suggestions for registering a user",description:{content:"Return username, display name and email suggestions for registering a user",type:"text/plain"},url:{path:["login","registration","data-suggestion"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},y=void 0,f={unversionedId:"login-service/register-controller-get-data-suggestions-1",id:"login-service/register-controller-get-data-suggestions-1",title:"Return username, display name and email suggestions for registering a user",description:"Return username, display name and email suggestions for registering a user",source:"@site/rest-docs/login-service/register-controller-get-data-suggestions-1.api.mdx",sourceDirName:"login-service",slug:"/login-service/register-controller-get-data-suggestions-1",permalink:"/gropius-backend-docs/rest/login-service/register-controller-get-data-suggestions-1",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"register-controller-get-data-suggestions-1",title:"Return username, display name and email suggestions for registering a user",description:"Return username, display name and email suggestions for registering a user",sidebar_label:"Return username, display name and email suggestions for registering a user",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"RegisterController_getDataSuggestions_1",description:"Return username, display name and email suggestions for registering a user",parameters:[],requestBody:{required:!0,content:{"application/json":{schema:{type:"object",properties:{register_token:{type:"string",description:'The register token issued during as result of the oauth registration flow.\nScope of the token must contain "login-register".\n\nMust be given.',example:"registration.token.jwt"}},required:["register_token"],title:"RegistrationTokenInput"}}}},responses:{200:{description:"If valid token and successfull (partial) suggested data for the new user",content:{"application/json":{schema:{type:"object",properties:{status:{description:"Status of the returned user data suggestion and information on usability",enum:["already-registered","username-taken","no-data","ok"],type:"string"},username:{type:"string",description:"A potential username to use for the registration.\nIf one is given, it was free the moment the suggestion is retrieved",example:"testUser"},displayName:{type:"string",description:"A potential name to display in the UI for the new user.",example:"Test User"},email:{type:"string",description:"A potential email of the new user.",example:"test-user@example.com"}},required:["status"],title:"UserDataSuggestionResponse"}}}},201:{description:"",content:{"application/json":{schema:{type:"object",properties:{status:{description:"Status of the returned user data suggestion and information on usability",enum:["already-registered","username-taken","no-data","ok"],type:"string"},username:{type:"string",description:"A potential username to use for the registration.\nIf one is given, it was free the moment the suggestion is retrieved",example:"testUser"},displayName:{type:"string",description:"A potential name to display in the UI for the new user.",example:"Test User"},email:{type:"string",description:"A potential email of the new user.",example:"test-user@example.com"}},required:["status"],title:"UserDataSuggestionResponse"}}}},400:{description:"If the input data is invalid"},401:{description:"If the given registration token is not/no longer valid or the registration time frame has expired"}},tags:["login-api"],method:"post",path:"/login/registration/data-suggestion",servers:[],securitySchemes:{oauth2:{type:"oauth2",flows:{},description:"Access token provided by running the oauth flow (and if needed) registering/linking",bearerFormat:"JWT"},bearer:{scheme:"bearer",bearerFormat:"JWT",type:"apiKey",description:"Access token provided after running the oauth flow (and if needed registering/linking)"},api_key:{type:"apiKey",in:"header",name:"sync-api",description:"Secret Text shared between sync services and login service"}},jsonRequestBodyExample:{register_token:"registration.token.jwt"},info:{title:"Gropius Login Service",description:"API for login, registration and linking Gropius accounts to accounts on IMSs",version:"1.0.0",contact:{}},postman:{name:"Return username, display name and email suggestions for registering a user",description:{content:"Return username, display name and email suggestions for registering a user",type:"text/plain"},url:{path:["login","registration","data-suggestion"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"login-service/gropius-login-service",custom_edit_url:null},sidebar:"restSidebar",previous:{title:"Introduction",permalink:"/gropius-backend-docs/rest/login-service/gropius-login-service"},next:{title:"Self register (create user) using registration token",permalink:"/gropius-backend-docs/rest/login-service/register-controller-register-2"}},k={},v=[{value:"Request",id:"request",level:2}],b={toc:v},x="wrapper";function T(e){let{components:t,...s}=e;return(0,i.kt)(x,(0,a.Z)({},b,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{className:"openapi__heading"},"Return username, display name and email suggestions for registering a user"),(0,i.kt)(o(),{method:"post",path:"/login/registration/data-suggestion",mdxType:"MethodEndpoint"}),(0,i.kt)(p(),{infoPath:"login-service/gropius-login-service",mdxType:"SecuritySchemes"}),(0,i.kt)("p",null,"Return username, display name and email suggestions for registering a user"),(0,i.kt)("h2",{id:"request"},"Request"),(0,i.kt)(m.Z,{className:"openapi-tabs__mime",mdxType:"MimeTabs"},(0,i.kt)(c.default,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-mime"},(0,i.kt)("h3",{className:"openapi-markdown__details-summary-header-body"},"Body"),(0,i.kt)("strong",{className:"openapi-schema__required"},"required")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(u.Z,{collapsible:!1,name:"register_token",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:'The register token issued during as result of the oauth registration flow.\nScope of the token must contain "login-register".\n\nMust be given.',example:"registration.token.jwt"},mdxType:"SchemaItem"}))))),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)(n.Z,{mdxType:"ApiTabs"},(0,i.kt)(c.default,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"If valid token and successfull (partial) suggested data for the new user")),(0,i.kt)("div",null,(0,i.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(c.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(g.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(u.Z,{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`already-registered`, `username-taken`, `no-data`, `ok`]",schema:{description:"Status of the returned user data suggestion and information on usability",enum:["already-registered","username-taken","no-data","ok"],type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(u.Z,{collapsible:!1,name:"username",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A potential username to use for the registration.\nIf one is given, it was free the moment the suggestion is retrieved",example:"testUser"},mdxType:"SchemaItem"}),(0,i.kt)(u.Z,{collapsible:!1,name:"displayName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A potential name to display in the UI for the new user.",example:"Test User"},mdxType:"SchemaItem"}),(0,i.kt)(u.Z,{collapsible:!1,name:"email",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A potential email of the new user.",example:"test-user@example.com"},mdxType:"SchemaItem"})))),(0,i.kt)(c.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(d.Z,{responseExample:'{\n  "status": "already-registered",\n  "username": "testUser",\n  "displayName": "Test User",\n  "email": "test-user@example.com"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(c.default,{label:"201",value:"201",mdxType:"TabItem"},(0,i.kt)("div",null),(0,i.kt)("div",null,(0,i.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(c.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(g.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(u.Z,{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:"**Possible values:** [`already-registered`, `username-taken`, `no-data`, `ok`]",schema:{description:"Status of the returned user data suggestion and information on usability",enum:["already-registered","username-taken","no-data","ok"],type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(u.Z,{collapsible:!1,name:"username",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A potential username to use for the registration.\nIf one is given, it was free the moment the suggestion is retrieved",example:"testUser"},mdxType:"SchemaItem"}),(0,i.kt)(u.Z,{collapsible:!1,name:"displayName",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A potential name to display in the UI for the new user.",example:"Test User"},mdxType:"SchemaItem"}),(0,i.kt)(u.Z,{collapsible:!1,name:"email",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A potential email of the new user.",example:"test-user@example.com"},mdxType:"SchemaItem"})))),(0,i.kt)(c.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(d.Z,{responseExample:'{\n  "status": "already-registered",\n  "username": "testUser",\n  "displayName": "Test User",\n  "email": "test-user@example.com"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(c.default,{label:"400",value:"400",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"If the input data is invalid")),(0,i.kt)("div",null)),(0,i.kt)(c.default,{label:"401",value:"401",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"If the given registration token is not/no longer valid or the registration time frame has expired")),(0,i.kt)("div",null))))))}T.isMDXComponent=!0}}]);